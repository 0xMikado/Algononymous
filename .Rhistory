getwd()
c(1,1:3)
c("STUDYID","USUBJID","DSDECOD","DSSTDY")
x[, c("STUDYID","USUBJID","DSDECOD","DSSTDY")]
function(x)
x[, c("USUBJID","STUDYID","RFSTDTC","DTHDTC","AGE","AGEU","SEX","COUNTRY","DTHFL")]
x
DS_2020.09.04 <- read.csv("~/Documents/EPFL/EPFL MA3/Pds/Dataset/Curated dataset/DS_2020-09-04.csv")
View(DS_2020.09.04)
SC_2020.09.04 <- read.csv("~/Documents/EPFL/EPFL MA3/Pds/Dataset/Curated dataset/SC_2020-09-04.csv")
View(SC_2020.09.04)
View(DS_2020.09.04)
DD_2020.09.04 <- read.csv("~/Documents/EPFL/EPFL MA3/Pds/Dataset/Curated dataset/DD_2020-09-04.csv")
View(DD_2020.09.04)
DM_2020.09.04 <- read.csv("~/Documents/EPFL/EPFL MA3/Pds/Dataset/Curated dataset/DM_2020-09-04.csv")
View(DM_2020.09.04)
View(DS_2020.09.04)
DM_copy <- read.csv("~/Documents/EPFL/EPFL MA3/Pds/Dataset/Curated dataset/DM_copy.csv")
View(DM_copy)
rm(list=ls())
library(sdcMicro)
library(ggplot2)
library(ggplot2)
install.packages("ggplot2")
library(ggplot2)
library(sdcMicro)
library(ggplot2)
getwd()
inputdata <- readMicrodata(path="/Users/nicolasmartinod/Documents/EPFL/EPFL MA3/Pds/Dataset/Curated dataset/DM_copy.csv", type="csv", convertCharToFac=TRUE, drop_all_missings=TRUE, header=TRUE, sep=",")
View(inputdata)
typeof(inputdata)
inputdata$RFSTDTC <- as-Date(inputdata$RFSTDTC, "%Y-%m-%d")
inputdata$RFSTDTC <- as.Date(inputdata$RFSTDTC, "%Y-%m-%d")
rm(list=ls())
inputdata <- readMicrodata(path="/Users/nicolasmartinod/Documents/EPFL/EPFL MA3/Pds/Dataset/Curated dataset/DM_copy.csv", type="csv", convertCharToFac=TRUE, drop_all_missings=TRUE, header=TRUE, sep=",")
View(inputdata)
inputdata$RFSTDTC <- as.Date(inputdata$RFSTDTC, "%Y-%m")
rm(list=ls())
inputdata <- readMicrodata(path="/Users/nicolasmartinod/Documents/EPFL/EPFL MA3/Pds/Dataset/Curated dataset/DM_copy.csv", type="csv", convertCharToFac=TRUE, drop_all_missings=TRUE, header=TRUE, sep=",")
typeof(inputdata)
View(inputdata)
#inputdata$RFSTDTC <- as.Date(inputdata$RFSTDTC, "%Y-%m")
nrow(inputdata)
#inputdata$RFSTDTC <- as.Date(inputdata$RFSTDTC, "%Y-%m")
ncol(inputdata)
#inputdata$RFSTDTC <- as.Date(inputdata$RFSTDTC, "%Y-%m")
inputdata1 <- rbind(inputdata,inputdata,inputdata,inputdata,inputdata,inputdata,inputdata)
#inputdata$RFSTDTC <- as.Date(inputdata$RFSTDTC, "%Y-%m")
inputdata1 <- rbind(inputdata,inputdata)
#inputdata$RFSTDTC <- as.Date(inputdata$RFSTDTC, "%Y-%m")
inputdata1 <- cbind(inputdata,inputdata)
ncol(inputdata)
Keep <- c("RFSTDTC", "DTHL", "SITEID", "AGE", "AGEU", "SEX", "COUNTRY" )
db <- inputdata[Keep]
Keep <- c("RFSTDTC")
db <- inputdata[Keep]
View(db)
Keep <- c("RFSTDTC", "DTHFL", "SITEID", "AGE", "AGEU", "SEX", "COUNTRY" )
db <- inputdata[Keep]
View(db)
ggplot(dat=inputdata,  aes(x=AGE_STD, fill=COUNTRY)) +
geom_histogram( color="#e9ecef", alpha=0.6, position = 'identity') +
#scale_fill_manual(values=c("#69b3a2", "#404080")) +
labs(fill="")+
xlab("Age (years)")+
ylab("Number of patients")+
facet_wrap(~STUDYID)
ggplot(dat=inputdata,  aes(x=AGE_STD, fill=COUNTRY)) +
geom_histogram( color="#e9ecef", alpha=0.6, position = 'identity') +
#scale_fill_manual(values=c("#69b3a2", "#404080")) +
labs(fill="")+
xlab("Age (years)")+
ylab("Number of patients")+
facet_wrap(~STUDYID)
ggplot(dat=inputdata,  aes(x=AGE, fill=COUNTRY)) +
geom_histogram( color="#e9ecef", alpha=0.6, position = 'identity') +
#scale_fill_manual(values=c("#69b3a2", "#404080")) +
labs(fill="")+
xlab("Age (years)")+
ylab("Number of patients")+
facet_wrap(~STUDYID)
?+
?-
?list
?list
+
2
4
?list
ggplot(dat=inputdata,  aes(x=AGE, fill=COUNTRY)) +
geom_histogram( color="#e9ecef", alpha=0.6, position = 'identity') +
#scale_fill_manual(values=c("#69b3a2", "#404080")) +
labs(fill="")+
xlab("Age (years)")+
ylab("Number of patients")+
facet_wrap(~STUDYID)
ggplot(dat=inputdata,  aes(x=AGE, fill=COUNTRY)) +
geom_histogram( color="#e9ecef", alpha=0.6, position = 'identity') +
#scale_fill_manual(values=c("#69b3a2", "#404080")) +
labs(fill="")+
xlab("Age (years)")+
ylab("Number of patients")+
ggplot(dat=inputdata,  aes(x=AGE, fill=COUNTRY)) +
geom_histogram( color="#e9ecef", alpha=0.6, position = 'identity') +
#scale_fill_manual(values=c("#69b3a2", "#404080")) +
labs(fill="")+
xlab("Age (years)")+
ylab("Number of patients")+
facet_wrap(~STUDYID)
ggplot(dat=inputdata,  aes(x=AGE, fill=COUNTRY)) +
geom_histogram( color="#e9ecef", alpha=0.6, position = 'identity') +
#scale_fill_manual(values=c("#69b3a2", "#404080")) +
labs(fill="")+
xlab("Age (years)")+
ylab("Number of patients")+
facet_wrap(~STUDYID)
ggplot(dat=inputdata,  aes(x=AGE, fill=COUNTRY)) +
geom_histogram( color="#e9ecef", alpha=0.6, position = 'identity') +
#scale_fill_manual(values=c("#69b3a2", "#404080")) +
labs(fill="")+
xlab("Age (year)")+
ylab("Number of patients")+
facet_wrap(~STUDYID)
ggplot(dat=inputdata,  aes(x=AGE, fill=COUNTRY)) +
geom_histogram( color="#e9ecef", alpha=0.6, position = 'identity') +
#scale_fill_manual(values=c("#69b3a2", "#404080")) +
labs(fill="")+
xlab("Age (years)")+
ylab("Number of patients")
ggplot(dat=inputdata,  aes(x=AGE, fill=COUNTRY)) +
geom_histogram( color="#e9ecef", alpha=0.6, position = 'identity') +
#scale_fill_manual(values=c("#69b3a2", "#404080")) +
labs(fill="")+
xlab("Age (years)")+
ylab("Number of patients")+
facet_wrap(~STUDYID)
+facet_wrap(~STUDYID)
ggplot(dat=inputdata,  aes(x=AGE, fill=COUNTRY)) +
geom_histogram( color="#e9ecef", alpha=0.6, position = 'identity') +
#scale_fill_manual(values=c("#69b3a2", "#404080")) +
labs(fill="")+
xlab("Age (year)")+
ylab("Number of patients")
ggplot(dat=inputdata,  aes(x=AGE, fill=COUNTRY)) +
geom_histogram( color="#e9ecef", alpha=0.6, position = 'identity') +
#scale_fill_manual(values=c("#69b3a2", "#404080")) +
labs(fill="")+
xlab("Age (year)")+
ylab("Number of patients")+
ggplot(dat=inputdata,  aes(x=AGE, fill=COUNTRY)) +
geom_histogram( color="#e9ecef", alpha=0.6, position = 'identity') +
#scale_fill_manual(values=c("#69b3a2", "#404080")) +
labs(fill="")+
xlab("Age (years)")+
ylab("Number of patients")+
ggplot(dat=inputdata,  aes(x=AGE, fill=COUNTRY)) +
geom_histogram( color="#e9ecef", alpha=0.6, position = 'identity') +
#scale_fill_manual(values=c("#69b3a2", "#404080")) +
labs(fill="")+
xlab("Age (years)")+
ylab("Number of patients")+
ggplot(dat=inputdata,  aes(x=AGE, fill=COUNTRY)) +
geom_histogram( color="#e9ecef", alpha=0.6, position = 'identity') +
#scale_fill_manual(values=c("#69b3a2", "#404080")) +
labs(fill="")+
xlab("Age (years)")+
ylab("Number of patients")
ggplot(dat=inputdata,  aes(x=AGE, fill=COUNTRY)) +
geom_histogram( color="#e9ecef", alpha=0.6, position = 'identity') +
#scale_fill_manual(values=c("#69b3a2", "#404080")) +
labs(fill="")+
xlab("Age (years)")+
ylab("Number of patients")+
facet_wrap(~STUDYID)
ggplot(dat=db,  aes(x=AGE, fill=COUNTRY)) +
geom_histogram( color="#e9ecef", alpha=0.6, position = 'identity') +
#scale_fill_manual(values=c("#69b3a2", "#404080")) +
labs(fill="")+
xlab("Age (years)")+
ylab("Number of patients")+
facet_wrap(~SITEID)
# Start the clock!
ptm <- proc.time()
# Stop the clock
proc.time() - ptm
# Start the clock!
ptm <- proc.time()
# Stop the clock
proc.time() - ptm
# Start the clock!
ptm <- proc.time()
# Stop the clock
proc.time() - ptm
class(db)
typeof(db)
ptm <- proc.time()
sdcObj <- createSdcObj(dat=db,
keyVars=c("COUNTRY","SEX","RFSTDTC","DTHFL", "AGE", "AGEU", "SITEID"),
numVars=c("AGE"),
hhId=NULL,
strataVar=NULL,
pramVars=NULL,
excludeVars=NULL,
seed=0,
randomizeRecords=FALSE,
alpha=c(1)
)
proc.time() - ptm
ptm <- proc.time()
sdcObj <- createSdcObj(dat=db,
keyVars=c("COUNTRY","SEX","RFSTDTC","DTHFL", "AGE", "AGEU", "SITEID"),
numVars=c("AGE"),
hhId=NULL,
strataVar=NULL,
pramVars=NULL,
excludeVars=NULL,
seed=0,
randomizeRecords=FALSE,
alpha=c(1)
)
proc.time() - ptm
View(sdcObj)
sdcInitial
sdcObj
print(sdcObj, "risk")
(sdcObj@risk$global$risk )
slotNames(sdcObj)
SdcObj@risk
sdcObj@risk
sdcObj@risk@individual
rm(list=ls())
install.packages("IsolationForest", repos="http://R-Forge.R-project.org")
install.packages("afex")
install.packages("emmeans")
shiny::runApp('Documents/EPFL/EPFL MA3/Pds/Pds github')
?menuItem
runApp('Documents/EPFL/EPFL MA3/Pds/Pds github')
runApp('Documents/EPFL/EPFL MA3/Pds/Pds github')
validateCssUnit("10%")
validateCssUnit("10")
validateCssUnit("10e")
runApp('Documents/EPFL/EPFL MA3/Pds/Pds github')
inputdata <- readMicrodata(path="/Users/nicolasmartinod/Documents/EPFL/EPFL MA3/Pds/Dataset/Curated dataset/DM_copy.csv", type="csv", convertCharToFac=TRUE, drop_all_missings=TRUE, header=TRUE, sep=",")
inputdata <- readMicrodata(path="/Users/nicolasmartinod/Documents/EPFL/EPFL MA3/Pds/Dataset/Curated dataset/DM_copy.csv", type="csv", convertCharToFac=TRUE, drop_all_missings=TRUE, header=TRUE, sep=",")
library(sdcMicro)
inputdata <- readMicrodata(path="/Users/nicolasmartinod/Documents/EPFL/EPFL MA3/Pds/Dataset/Curated dataset/DM_copy.csv", type="csv", convertCharToFac=TRUE, drop_all_missings=TRUE, header=TRUE, sep=",")
clear
rm(list=ls())
a <- import_dataset()
library(sdcMicro)
import_dataset <- function() {
inputdata <- readMicrodata(path="/Users/nicolasmartinod/Documents/EPFL/EPFL MA3/Pds/Dataset/Curated dataset/DM_copy.csv", type="csv", convertCharToFac=TRUE, drop_all_missings=TRUE, header=TRUE, sep=",")
return(inputdata)
}
a <- import_dataset()
?source
rm(list=ls())
source("Functions.R")
source("Functions.R")
pwd()
getpwd()
getwd()
setwd("/Users/nicolasmartinod/Documents/EPFL/EPFL MA3/Pds")
getwd()
source("Functions.R")
setwd("/Users/nicolasmartinod/Documents/EPFL/EPFL MA3/Pds/Pds github")
source("Functions.R")
a <- import_dataset()
rm(list=ls())
runApp()
paste("gvrbrbrbr","fbfbbb")
a<-1
paste("gvrbrbrbr","fbfbbb",a)
paste("gvrbrbrbr","fbfbbb",a,sep ="")
runApp()
?mtcars
runApp()
a<-import_dataset()
head(a)
runApp()
View(a)
runApp()
1=1
1==1
runApp()
runApp()
runApp()
?h1
runApp()
inputdata <- readMicrodata(path="/Users/nicolasmartinod/Documents/EPFL/EPFL MA3/Pds/Dataset/Curated dataset/DM_copy.csv", type="csv", convertCharToFac=TRUE, drop_all_missings=TRUE, header=TRUE, sep=",")
Keep <- c("RFSTDTC", "DTHFL", "SITEID", "AGE", "AGEU", "SEX", "COUNTRY" )
db <- inputdata[Keep]
db2 <- rbind(db,db)
View(db2)
db2 <- cbind(db,db)
View(db2)
b <- cbind(Keep,a)
Keep <- c("RFSTDTC", "DTHFL", "SITEID", "AGE", "AGEU", "SEX", "COUNTRY" )
a <- c("Variable explication","Variable explication","Variable explication","Variable explication",
"Variable explication","Variable explication","Variable explication",)
rm(list=ls())
Keep <- c("RFSTDTC", "DTHFL", "SITEID", "AGE", "AGEU", "SEX", "COUNTRY" )
a <- c("Variable explication","Variable explication","Variable explication","Variable explication",
"Variable explication","Variable explication","Variable explication",)
a <- c("Variable explication","Variable explication","Variable explication","Variable explication",
"Variable explication","Variable explication","Variable explication")
b <- cbind(Keep,a)
View(b)
View(b)
runApp()
runApp()
inputdata <- readMicrodata(path="/Users/nicolasmartinod/Documents/EPFL/EPFL MA3/Pds/Dataset/Curated dataset/DM_copy.csv", type="csv", convertCharToFac=TRUE, drop_all_missings=TRUE, header=TRUE, sep=",")
db <- inputdata[Keep]
sdcObj <- createSdcObj(dat=db,
keyVars=c("COUNTRY","SEX","RFSTDTC","DTHFL", "AGE", "AGEU", "SITEID"),
numVars=c("AGE"),
hhId=NULL,
strataVar=NULL,
pramVars=NULL,
excludeVars=NULL,
seed=0,
randomizeRecords=FALSE,
alpha=c(1)
)
print(sdcObj, "risk")
runApp()
